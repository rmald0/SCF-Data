
##################################################
#   Set up Working Directory or Project Folder
###################################################

# Setup your working directory - make sure you using forward slash, not backward slash

# 1. using code
getwd( )
setwd("C:/Users/user/Desktop/Fall 2024/Classes/ECO 490W/Data/ECO 490W")

# 2. #Create a project folder  - to organize all you did in one folder.
  # click the + sign in Source panel and create a new directory.
# create a working directory named "ECO 490W"

####################################################
#  Install Packages
###################################################

# 2. Using the path
# Packages -> install -> search the package .....

# 1. using code
#install.packages()

install.packages("lubridate")
install.packages("ggplot2") 
install.packages("gridExtra")
install.packages("ggthemes")
install.packages("dplyr")
install.packages("foreign")
install.packages("GGally")
install.packages("readxl")
install.packages("zoo")
install.packages("stargazer")


#3. Add the library
library(lubridate)
library(ggplot2)
library(gridExtra)
library(ggthemes)
library(dplyr)
library(foreign)
library(GGally)
library(readxl)
library(zoo)
library(stargazer)
library(readr)


#####################################################
#  Importing Data 
#
#####################################################
# 1. csv file
# Six variables: Population, Land_Popultion, Personal Income, Unemployment, Murder and Burglary
library(readr)
Data1 <- read_csv("Data1.csv")
View(Data1)

# 2. text file
#  Three Variables: Rent, Housing Price and Immigration
Data2 <- read.table("Data2.txt", header = TRUE, sep = "\t")
View(Data2)

# 3. Excel files
# 2002
library(readxl)
Data3 <- read_excel("Data3.xlsx")
View(Data3)

# 2003
library(readr)
Data4 <- read_csv("Data4.csv")
View(Data4)

# 2004
Data5 <- read_csv("Data5.csv")
View(Data5)

# 2005
Data6 <- read_csv("Data6.csv")
View(Data6)


##################################################
# Merge the data (Data1 and Data2)
#  Joining two data sets horizontally.
####################################################
str(Data1)
str(Data2)


# Notice the common variables ‘Name’ and ‘MSA’ which we are going to use
# to match each row on both files

Data_1_2 <- merge(Data1, Data2, by=c("MSA"), all=TRUE)
View(Data_1_2)

# Understanding and Exploring the data 

head(Data_1_2)
tail(Data_1_2)
head(Data_1_2, 30)
tail(Data_1_2, 30)

# Remove repeated column in the data 
Data_1_2$MsaName.y <- NULL

# Rename the column name in a Data frame
library(dplyr)
Data_1_2 = rename(Data_1_2, MsaName = MsaName.x)




############################################################
#
# Appending Data (Data3, Data4, Data5, and Data6)
#  Joining the data vertically.
#############################################################

library(dplyr)
# using rbind to combine data in each row. Keep in mind that they
# shoud have exactly the same variable names and the same number of variables.

# Remove repeated column in the Data4, Data5 and Data6
Data5$Year_ID <- NULL
Data6$Year_ID <- NULL

# Now append the four data sets
Data_3_6 = rbind(Data3, Data4, Data5, Data6)
summary(Data_3_6)
summary(Data_3_6[,4:12])


# Notice some missing values (NA's) and has to be addressed either replaced or dropped

# If you do not exclude these values most functions will return an NA.
# Example

mean(Data_3_6$Population)

## Find Missing Values
is.na(Data_3_6)

## Count Missing Values
sum(is.na(Data_3_6))


# Exclude or Ignore the NA in the functions

mean(Data_3_6$Population, na.rm = TRUE)

#### How to handle the missing values in the data ######

#1. Omit Missing values and/or Removing the rows that contain NA's 

# na.omit(Data_3_6)
Data_3_6_new <- na.omit(Data_3_6)
sum(is.na(Data_3_6_new))

#2. Replace NA with the mean or median
#sum(is.na(Data_3_6$Population))
#   Data_3_6$Population <- mean(Data_3_6$Population, na.rm = TRUE)
   
#sum(is.na(Data_3_6$Rent))
#    Data_3_6$Rent <- mean(Data_3_6$Rent, na.rm = TRUE)

library("tidyr")
library("dplyr")

#3. Replaced with zero or set NA to zero.
   sum(is.na(Data_3_6))
 #  Data_3_6[is.na(Data_3_6)] <- 0
  
   # Replace NA with zero on all numeric column 
   Data_3_6 <- Data_3_6 %>% 
     mutate_at(c(4,12), ~replace_na(.,0))
   
   # Replace on selected column
   Data_3_6["Rent"][is.na(Data_3_6["Rent"])] <- 0
   sum(is.na(Data_3_6["Rent"]))
   
   Data_3_6["HOUSING PRICE"][is.na(Data_3_6["HOUSING PRICE"])] <- 0
   sum(is.na(Data_3_6["HOUSING PRICE"]))
   
   Data_3_6["IMM"][is.na(Data_3_6["IMM"])] <- 0
   sum(is.na(Data_3_6["IMM"]))
   
   Data_3_6["MURDER"][is.na(Data_3_6["MURDER"])] <- 0
   sum(is.na(Data_3_6["MURDER"]))
   
   Data_3_6["BUGLARY"][is.na(Data_3_6["BUGLARY"])] <- 0
   sum(is.na(Data_3_6["BUGLARY"]))
   
   Data_3_6["Population"][is.na(Data_3_6["Population"])] <- 0
   sum(is.na(Data_3_6["Population"]))
   
   #Data_3_6["Land_Pop"][is.na(Data_3_6["Land_Pop"])] <- 0
   sum(is.na(Data_3_6["Land_Pop"]))
   
   Data_3_6["Personl Income"][is.na(Data_3_6["Personl Income"])] <- 0
   sum(is.na(Data_3_6["Personl Income"]))
   
   Data_3_6["Unemployment"][is.na(Data_3_6["Unemployment"])] <- 0
   sum(is.na(Data_3_6["Unemployment"]))
   
   sum(is.na(Data_3_6))
   summary(Data_3_6[,4:12])   
   

########################################################
#
#  Data Transformation 
#
##########################################################

# creating new variables with transformation and deleting a variables

#1. log transformation of a single variable

Data_1_2$lpop <- log(Data_1_2$Population)

#2. Some operations 

Data_1_2$PerIncome <- Data_1_2$`Personl Income`/Data_1_2$Population


# Delete a variable/column from the data frame

Data_1_2$lpop <- NULL

# Alternatively
Data_1_2 <- Data_1_2[,1:9]


##########################################################
#
# Creating Dummy variables
#
#########################################################
library(readr)
Data7 <- read_csv("Data7.csv")

View(Data7)

Data7$gender
table(Data7$gender) #1 Male, 2 Female

# 1. using ifelse( ) function

Data7$male <- ifelse(Data7$gender=="1", 1,0)
Data7$female <- ifelse(Data7$gender=="2",1,0)

#2. Using fastDummies Package to create multiple dummies as the same time.

install.packages("fastDummies")
library(fastDummies)

Data7_new <- dummy_cols(Data7, select_columns = 'gender')

table(Data7$Ethnicity) #1: White, 2: Non-white
Data7_new2 <- dummy_cols(Data7, select_columns = 'Ethnicity')






























